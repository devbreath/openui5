sap.ui.define(["sap/ui/webc/common/thirdparty/base/UI5Element","sap/ui/webc/common/thirdparty/base/renderer/LitRenderer","sap/ui/webc/common/thirdparty/base/Keys","sap/ui/webc/common/thirdparty/base/util/AriaLabelHelper","sap/ui/webc/common/thirdparty/base/FeaturesRegistry","sap/ui/webc/common/thirdparty/base/i18nBundle","sap/ui/webc/common/thirdparty/base/Device","sap/ui/webc/common/thirdparty/base/util/isDefaultSlotProvided","./types/ButtonDesign","./generated/templates/ButtonTemplate.lit","./Icon","./generated/i18n/i18n-defaults","./generated/themes/Button.css"],function(t,e,i,n,s,a,o,r,u,c,l,p,d){"use strict";function h(t){return t&&typeof t==="object"&&"default"in t?t["default"]:t}var f=h(t);var b=h(e);var y=h(r);let m=false;let g=null;const v={tag:"ui5-button",languageAware:true,properties:{design:{type:u,defaultValue:u.Default},disabled:{type:Boolean},icon:{type:String},iconEnd:{type:Boolean},submits:{type:Boolean},tooltip:{type:String},active:{type:Boolean},iconOnly:{type:Boolean},focused:{type:Boolean},hasIcon:{type:Boolean},accessibleName:{type:String,defaultValue:undefined},accessibleNameRef:{type:String,defaultValue:""},accessibilityAttributes:{type:Object},nonInteractive:{type:Boolean},_iconSettings:{type:Object},_tabIndex:{type:String,defaultValue:"0",noAttribute:true},_isTouch:{type:Boolean}},managedSlots:true,slots:{default:{type:Node}},events:{click:{}}};class T extends f{static get metadata(){return v}static get styles(){return d}static get render(){return b}static get template(){return c}static get dependencies(){return[l]}constructor(){super();this._deactivate=()=>{if(g){g.active=false}};if(!m){document.addEventListener("mouseup",this._deactivate);m=true}const t=t=>{t.isMarked="button";if(this.nonInteractive){return}this.active=true};this._ontouchstart={handleEvent:t,passive:true}}onEnterDOM(){this._isTouch=(o.isPhone()||o.isTablet())&&!o.isCombi()}onBeforeRendering(){const t=s.getFeature("FormSupport");if(this.submits&&!t){console.warn(`In order for the "submits" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`)}this.iconOnly=this.isIconOnly;this.hasIcon=!!this.icon}_onclick(t){if(this.nonInteractive){return}t.isMarked="button";const e=s.getFeature("FormSupport");if(e&&this.submits){e.triggerFormSubmit(this)}if(o.isSafari()){this.getDomRef().focus()}}_onmousedown(t){if(this.nonInteractive||this._isTouch){return}t.isMarked="button";this.active=true;g=this}_ontouchend(t){this.active=false;if(g){g.active=false}}_onmouseup(t){t.isMarked="button"}_onkeydown(t){t.isMarked="button";if(i.isSpace(t)||i.isEnter(t)){this.active=true}}_onkeyup(t){if(i.isSpace(t)||i.isEnter(t)){this.active=false}}_onfocusout(t){if(this.nonInteractive){return}this.active=false;if(o.isDesktop()){this.focused=false}}_onfocusin(t){if(this.nonInteractive){return}t.isMarked="button";if(o.isDesktop()){this.focused=true}}get hasButtonType(){return this.design!==u.Default&&this.design!==u.Transparent}get iconRole(){if(!this.icon){return""}return this.isIconOnly?"img":"presentation"}get isIconOnly(){return!y(this)}static typeTextMappings(){return{Positive:p.BUTTON_ARIA_TYPE_ACCEPT,Negative:p.BUTTON_ARIA_TYPE_REJECT,Emphasized:p.BUTTON_ARIA_TYPE_EMPHASIZED}}get buttonTypeText(){return T.i18nBundle.getText(T.typeTextMappings()[this.design])}get tabIndexValue(){const t=this.getAttribute("tabindex");if(t){return t}return this.nonInteractive?"-1":this._tabIndex}get showIconTooltip(){return this.iconOnly&&!this.tooltip}get ariaLabelText(){return n.getEffectiveAriaLabelText(this)}static async onDefine(){T.i18nBundle=await a.getI18nBundle("@ui5/webcomponents")}}T.define();return T});